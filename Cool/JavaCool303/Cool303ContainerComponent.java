package JavaCool303;
import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

/**
 * <h1>Cool303ContainerComponent</h1>
 * <b>File Name:</b> Cool303ContainerComponent.java<br>
 * <b>Purpose:</b> Abstract class to define common container methods <br>
 * <b>File I/O:</b> No files are required or generated by the application
 * @author Sheldon Benard
 */
public abstract class Cool303ContainerComponent extends JPanel implements Cool303Component {
    private Cool303Theme theme;
    private ArrayList<Cool303Component> components = new ArrayList<>();
    private Color color = null;

    /**
     * <b>Name:</b> setTheme<br>
     * <b>Purpose:</b> theme setter method<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @param theme Cool303Theme strategy to be on in Cool303 objects
     */
    public void setTheme(Cool303Theme theme){
        this.theme = theme;
    }
    /**
     * <b>Name:</b> setColor<br>
     * <b>Purpose:</b> color setter method<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @param color Color used on container (depending on strategy logic)
     */
    public void setColor(Color color){ this.color = color;}

    /**
     * <b>Name:</b> getColor<br>
     * <b>Purpose:</b> color getter method<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @return Container's color
     */
    public Color getColor(){return this.color;}

    /**
     * <b>Name:</b> getTheme<br>
     * <b>Purpose:</b> theme getter method<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @return Container's theme
     */
    public Cool303Theme getTheme(){return this.theme;}

    /**
     * <b>Name:</b> get303Components<br>
     * <b>Purpose:</b> components getter method<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @return get container's added components
     */
    public ArrayList<Cool303Component> get303Components() {return this.components;}

    /**
     * <b>Name:</b> add303Component<br>
     * <b>Purpose:</b> Logic to add components to container objects<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @param component Cool303Component to be added to container
     */
    public void add303Component(Cool303Component component){
        component.setTheme(theme);
        this.components.add(component);

        String type = component.getClass().getSimpleName();

        if (type.equals("Cool303Button"))
            super.add((Cool303Button)component);
        else if (type.equals("Cool303TextField"))
            super.add((Cool303TextField)component);
        else if (type.equals("Cool303Container"))
            super.add((Cool303Container)component);
        this.repaint();
        this.revalidate();
    }

}
