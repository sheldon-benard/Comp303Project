package JavaCool303;
import javax.swing.border.EmptyBorder;
import java.awt.*;

/**
 * <h1>Summer</h1>
 * <b>File Name:</b> Summer.java<br>
 * <b>Purpose:</b> Implement Cool303Theme and provide a theme strategy <br>
 * <b>File I/O:</b> No files are required or generated by the application
 * @author Sheldon Benard
 */
public class Summer implements Cool303Theme {
    /**
     * <b>Name:</b> getButtonPreferredSize<br>
     * <b>Purpose:</b> Define the preferred size of button objects<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @return Dimension of button
     */
    @Override
    public Dimension getButtonPreferredSize() {
        return new Dimension(50,30);
    }

    /**
     * <b>Name:</b> getContainerPreferredSize<br>
     * <b>Purpose:</b> Define the preferred size of container objects<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @return Dimension of container
     */
    @Override
    public Dimension getContainerPreferredSize() {
        return new Dimension(200,200);
    }

    /**
     * <b>Name:</b> getTextFieldPreferredSize<br>
     * <b>Purpose:</b> Define the preferred size of text field objects<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @return Dimension of textfield
     */
    @Override
    public Dimension getTextFieldPreferredSize() {
        return new Dimension(50,25);
    }

    /**
     * <b>Name:</b> paintButton<br>
     * <b>Purpose:</b> Customize button; button.getText() can be used to get button text<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @param button paintButton that user defined; g Graphics - used to paint
     */
    @Override
    public void paintButton(Cool303Button button, Graphics g) {
        Dimension dimension = getButtonPreferredSize();

        //get dimensions of the button
        int width = (int)dimension.getWidth();
        int height = (int)dimension.getHeight();
        int length = button.getText().length()-1;

        //hide the drawing of the old button
        button.setContentAreaFilled(false);
        button.setOpaque(false);
        button.setBorder(new EmptyBorder(0,0,0,0));

        Graphics2D g2 = (Graphics2D)g;

        //Draw shape
        g2.setColor(new Color(1,221,221));
        g2.fillRoundRect(0,0,width,height,15,15);

        //Add text
        g2.setColor(Color.BLACK);
        g2.setFont(new Font("TimesRoman", Font.BOLD, 15));
        g2.drawString(button.getText(),width/2-2-5*length,height/2+5);


    }

    /**
     * <b>Name:</b> paintTextField <br>
     * <b>Purpose:</b> Customize textField; textField.getText() can be used to get textField text<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @param textField Cool303TextField that user defined; g Graphics - used to paint
     */
    @Override
    public void paintTextField(Cool303TextField textField, Graphics g) {
        Dimension dimension = getTextFieldPreferredSize();

        int width = (int)dimension.getWidth();
        int height = (int)dimension.getHeight();
        int length = textField.getText().length();

        //Remove old text field drawing
        textField.setOpaque(false);
        textField.setBorder(new EmptyBorder(0,0,0,0));

        Graphics2D g2 = (Graphics2D)g;
        g2.setColor(new Color(253,138,94));
        g2.fillRoundRect(0,0,width,height,10,10);

        //Add text back
        g2.setColor(Color.BLACK);
        g2.setFont(new Font("TimesRoman", Font.BOLD, 15));
        g2.drawString(textField.getText(),width/2-3*length,height/2+5);
    }

    /**
     * <b>Name:</b> paintContainer<br>
     * <b>Purpose:</b> Customize container; container.getColor() can be used to get container color set during construction<br>
     * <b>Author:</b> Sheldon Benard<br>
     * @param container Cool303Container that user defined; g Graphics - used to paint
     */
    @Override
    public void paintContainer(Cool303Container container, Graphics g) {
        //Ignore container.color() (if defined) and use the same color for every background
        container.setOpaque(true);
        container.setBackground(new Color(224,227,0));
    }
}